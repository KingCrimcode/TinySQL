#!/bin/sh

# Exit script on error
set -e

# Get commit message file
commit_msg_file="$1"

# Fetch current version from file
if [ -f VERSION ]; then
  version=$(cat VERSION)
else
  version="0.0.0"
fi

# Unpack version in 3 components
IFS='.' read -r major minor patch <<< "$version"

# Get commit message
msg=$(cat "$commit_msg_file")

# Determine bump level
bump="none"
if [[ "$msg" =~ BREAKING\ CHANGE|!:\  ]]; then
  bump="major"
elif [[ "$msg" =~ ^feat ]]; then
  bump="minor"
elif [[ "$msg" =~ ^fix ]]; then
  bump="patch"
fi

# Exit script if no bump
if [ "$bump" == "none" ]; then
  exit 0
fi

# Perform bump
case $bump in
  major)
    major=$((major + 1)); minor=0; patch=0;;
  minor)
    minor=$((minor + 1)); patch=0;;
  patch)
    patch=$((patch + 1));;
esac

new_version="${major}.${minor}.${patch}"

# Update version file
echo "$new_version" > VERSION
git add VERSION

# Append new version to commit message
echo -e "$msg\n\nVersion bumped to $new_version" > "$commit_msg_file"
